version: '3.8'
services:
  ov2xmp-redis:
    container_name: ov2xmp-redis
    hostname: ov2xmp-redis
    image: redis:7.2-rc-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - ov2xmp_redis_data:/data
    networks:
      - ov2xmp-network

  ov2xmp-postgres:
    image: postgres:15.3-alpine3.18
    restart: always
    container_name: ov2xmp-postgres
    hostname: ov2xmp-postgres
    volumes:
      - ov2xmp_db_data:/var/lib/postgresql/data/
    env_file:
      - ./postgres/.env
    networks:
      - ov2xmp-network
 
  ov2xmp-pgadmin4:
    container_name: ov2xmp-pgadmin4
    hostname: ov2xmp-pgadmin4
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=SuperSecret
    networks:
      - ov2xmp-network
    depends_on:
      - ov2xmp-postgres

  ov2xmp-filebrowser:
    container_name: ov2xmp-filebrowser
    hostname: ov2xmp-filebrowser
    image: filebrowser/filebrowser:latest
    restart: always
    volumes:
      - filebrowser-root:/srv
      - filebrowser-db:/database.db
      - ./filebrowser/filebrowser.json:/.filebrowser.json
    networks:
      - ov2xmp-network
  
  ov2xmp-ftp-server:
    container_name: ov2xmp-ftp-server
    hostname: ov2xmp-ftp-server
    image: gitlab.trsc-ppc.gr:5050/ev4eu/ov2xmp/ftp-server:latest
    restart: always
    network_mode: "host"
    volumes:
      - filebrowser-root:/files

  ov2xmp-http-file-server:
    container_name: ov2xmp-http-file-server
    hostname: ov2xmp-http-file-server
    image: gitlab.trsc-ppc.gr:5050/ev4eu/ov2xmp/http-file-server:latest
    restart: always
    volumes:
      - filebrowser-root:/files
    networks:
      - ov2xmp-network

  ov2xmp-daphne:
    container_name: ov2xmp-daphne
    hostname: ov2xmp-daphne
    restart: always
    image: gitlab.trsc-ppc.gr:5050/ev4eu/ov2xmp/ov2xmp-django:latest
    volumes:
      - ov2xmp_static_volume:/code/static
      - ov2xmp_media_volume:/code/media
    env_file:
      - ./ov2xmp-django/.env-docker
    depends_on:
      - ov2xmp-redis
      - ov2xmp-postgres
    networks:
      - ov2xmp-network
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  
  ov2xmp-csms:
    container_name: ov2xmp-csms
    hostname: ov2xmp-csms
    image: gitlab.trsc-ppc.gr:5050/ev4eu/ov2xmp/ov2xmp-django:latest
    command: ["sanic", "csms:app", "--host=0.0.0.0", "--port=9000"]
    env_file:
      - ./ov2xmp-django/.env-docker
    depends_on:
      - ov2xmp-daphne
    networks:
      - ov2xmp-network
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  ov2xmp-celery:
    container_name: ov2xmp-celery
    hostname: ov2xmp-celery
    image: gitlab.trsc-ppc.gr:5050/ev4eu/ov2xmp/ov2xmp-django:latest
    command: "celery -A ov2xmp worker -l info"
    env_file:
      - ./ov2xmp-django/.env-docker
    depends_on:
      - ov2xmp-daphne
    networks:
      - ov2xmp-network
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  ov2xmp-portainer:
    container_name: ov2xmp-portainer
    hostname: ov2xmp-portainer
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    restart: always
    environment:
      - BASE_URL=/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ov2xmp_portainer_data:/data
    networks:
      - ov2xmp-network

  ov2xmp-caddy:
    image: caddy:2
    container_name: ov2xmp-caddy
    hostname: ov2xmp-caddy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./caddy/caddyfile-prod:/etc/caddy/Caddyfile:ro
      - ./caddy/caddyfile-base:/etc/caddy/caddyfile-base:ro
      - ov2xmp_static_volume:/code/static
      - ov2xmp_media_volume:/code/media
      - ov2xmp_caddy_data:/data
      - ov2xmp_caddy_config:/config
      - filebrowser-root:/http
    env_file:
      - ./ov2xmp-django/.env-docker
    networks:
      - ov2xmp-network    

  ov2xmp-elasticsearch:
    container_name: ov2xmp-elasticsearch
    hostname: ov2xmp-elasticsearch
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0-amd64
    volumes:
      - "ov2xmp-elasticsearch-data:/usr/share/elasticsearch/data"
      - "./elk/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
    env_file:
      - ./elk/.env-es
    networks:
      - ov2xmp-network

  ov2xmp-elasticsearch-setup:
    container_name: ov2xmp-elasticsearch-setup
    image: ubuntu:latest
    volumes:
      - "./elk/elk-setup.sh:/root/elk-setup.sh"
    command: 'sh -c "apt update && apt install -y curl && chmod 777 /root/elk-setup.sh && /root/elk-setup.sh"'
    env_file:
      - ./elk/.env-es
    networks:
      - ov2xmp-network    
    depends_on:
      - ov2xmp-elasticsearch

  ov2xmp-logstash:
    hostname: ov2xmp-logstash
    container_name: ov2xmp-logstash
    image: docker.elastic.co/logstash/logstash:8.9.0-amd64
    restart: always 
    volumes:
      - "./elk/ov2xmp-normalizer.conf:/usr/share/logstash/config/ov2xmp-normalizer.conf"
    command: bash -c "logstash -f /usr/share/logstash/config/ov2xmp-normalizer.conf --config.reload.automatic"
    env_file:
      - ./elk/.env-logstash
    depends_on:
      - ov2xmp-elasticsearch
    networks:
      - ov2xmp-network

  ov2xmp-kibana:
    hostname: ov2xmp-kibana
    container_name: ov2xmp-kibana
    image: docker.elastic.co/kibana/kibana:8.9.0-amd64
    restart: always  
    env_file:
      - ./elk/.env-kibana
    depends_on:
      - ov2xmp-elasticsearch  
    networks:
      - ov2xmp-network


networks:
  ov2xmp-network:
    driver: bridge


volumes:
  ov2xmp_redis_data:
  ov2xmp_db_data:
  filebrowser-db:
  filebrowser-root:
  ov2xmp_static_volume:
  ov2xmp_media_volume:
  ov2xmp_portainer_data:
  ov2xmp_caddy_data:
  ov2xmp_caddy_config:
  ov2xmp-elasticsearch-data:
