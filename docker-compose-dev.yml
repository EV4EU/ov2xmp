version: '3.8'
services:
  ov2xmp-redis:
    container_name: ov2xmp-redis
    hostname: ov2xmp-redis
    image: redis:7.2-rc-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - ov2xmp_redis_data:/data
    networks:
      - ov2xmp-network

  ov2xmp-postgres:
    image: postgres:15.3-alpine3.18
    restart: always
    container_name: ov2xmp-postgres
    hostname: ov2xmp-postgres
    ports:
      - 5432:5432
    volumes:
      - ov2xmp_db_data:/var/lib/postgresql/data/
    env_file:
      - ./postgres/.env
    networks:
      - ov2xmp-network
 
  ov2xmp-pgadmin4:
    container_name: ov2xmp-pgadmin4
    hostname: ov2xmp-pgadmin4
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=SuperSecret
    networks:
      - ov2xmp-network
    depends_on:
      - ov2xmp-postgres

  ov2xmp-filebrowser:
    container_name: ov2xmp-filebrowser
    hostname: ov2xmp-filebrowser
    image: filebrowser/filebrowser:latest
    restart: always
    volumes:
      - filebrowser-root:/srv
      - filebrowser-db:/database.db
      - ./filebrowser/filebrowser.json:/.filebrowser.json
    networks:
      - ov2xmp-network
  
  ov2xmp-ftp-server:
    container_name: ov2xmp-ftp-server
    hostname: ov2xmp-ftp-server
    image: ov2xmp-ftp-server:latest
    restart: always
    network_mode: "host"
    volumes:
      - filebrowser-root:/files

  ov2xmp-http-file-server:
    container_name: ov2xmp-http-file-server
    hostname: ov2xmp-http-file-server
    image: ov2xmp-http-file-server:latest
    restart: always
    volumes:
      - filebrowser-root:/files
    networks:
      - ov2xmp-network

  ov2xmp-portainer:
    container_name: ov2xmp-portainer
    hostname: ov2xmp-portainer
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    restart: always
    environment:
      - BASE_URL=/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ov2xmp_portainer_data:/data
    networks:
      - ov2xmp-network

  ov2xmp-caddy:
    image: caddy:2
    container_name: ov2xmp-caddy
    hostname: ov2xmp-caddy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./caddy/caddyfile-dev:/etc/caddy/Caddyfile:ro
      - ./caddy/caddyfile-base:/etc/caddy/caddyfile-base:ro
      - ov2xmp_static_volume:/code/static
      - ov2xmp_media_volume:/code/media
      - ov2xmp_caddy_data:/data
      - ov2xmp_caddy_config:/config
      - filebrowser-root:/http
    env_file:
      - ./ov2xmp-django/.env-docker
    networks:
      - ov2xmp-network    

  ov2xmp-cdr-db:
    container_name: ov2xmp-cdr-db
    hostname: ov2xmp-cdr-db
    image: mongo:4.4.19-rc2
    restart: always
    ports:
      - 27017:27017     
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=user
      - MONGODB_INITDB_ROOT_PASSWORD=pass
    volumes:
      - ov2xmp_cdr_data:/data/db     
    networks:
      - ov2xmp-network


networks:
  ov2xmp-network:
    driver: bridge


volumes:
  ov2xmp_redis_data:
  ov2xmp_db_data:
  ov2xmp_cdr_data:
  filebrowser-db:
  filebrowser-root:
  ov2xmp_static_volume:
  ov2xmp_media_volume:
  ov2xmp_portainer_data:
  ov2xmp_caddy_data:
  ov2xmp_caddy_config:
